import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import api from '../../api';
import AdminSidebar from './AdminSidebar';
import '../../styles/AdminActions.css';
import cicon from '../../assets/icons/cicon.png';

const AdminViewPage = () => {
  const navigate = useNavigate();
  const [admins, setAdmins] = useState([]);
  const [message, setMessage] = useState(null);

  const fetchAdmins = async () => {
    try {
      const response = await api.get('/admins/');
      const data = Array.isArray(response.data)
        ? response.data
        : response.data.results || [];
      setAdmins(data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:', error);
      setMessage({ type: 'error', text: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤' });
    }
  };

  useEffect(() => {
    fetchAdmins();
  }, []);

  const handleDelete = async (admin) => {
    const confirm = window.confirm(
      `–¢–æ—á–Ω–æ –ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${admin.first_name} ${admin.last_name} (${admin.s})?`
    );
    if (!confirm) return;
    try {
      await api.delete(`/admins/${admin.id}/`);
      setAdmins(prev => prev.filter(a => a.id !== admin.id));
      setMessage({ type: 'success', text: `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${admin.s} —É–¥–∞–ª—ë–Ω` });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
      setMessage({ type: 'error', text: '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' });
    }
  };

  const renderRoleLabel = (role) => {
    switch (role) {
      case 'SUPER':
        return '–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
      case 'OP':
        return '–û–ø–µ—Ä–∞—Ç–æ—Ä';
      case 'REQ':
        return '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∑–∞—è–≤–∫–∞–º–∏';
      default:
        return '-';
    }
  };

  return (
    <div className="admin-page-container">
      <AdminSidebar />
      <div className="content-area">
        <h1>–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤</h1>
        {message && (
          <div className={`message ${message.type}`}>
            {message.text}
          </div>
        )}
        <div className="students-table-container">
          <table className="students-table">
            <thead>
              <tr>
                <th>–§–æ—Ç–æ</th>
                <th>S</th>
                <th>–ò–º—è</th>
                <th>–§–∞–º–∏–ª–∏—è</th>
                <th>–û—Ç—á–µ—Å—Ç–≤–æ</th>
                <th>–†–æ–ª—å</th>
                <th>–û–ø–µ—Ä–∞—Ü–∏–∏</th>
              </tr>
            </thead>
            <tbody>
              {admins.length > 0 ? (
                admins.map(admin => (
                  <tr key={admin.id}>
                    <td>
                      {admin.avatar ? (
                        <img
                          src={admin.avatar}
                          alt="Avatar"
                          className="student-avatar"
                        />
                      ) : (
                        <div className="student-avatar-placeholder" />
                      )}
                    </td>
                    <td>{admin.s}</td>
                    <td>{admin.first_name}</td>
                    <td>{admin.last_name}</td>
                    <td>{admin.middle_name || '-'}</td>
                    <td>{renderRoleLabel(admin.role)}</td>
                    <td>
                      {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è */}
                      <button
                        className="operation-icon delete-icon"
                        onClick={() => handleDelete(admin)}
                      >
                        üóëÔ∏è
                      </button>
                      {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
                      <img
                        src={cicon}
                        alt="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                        className="operation-icon"
                        onClick={() => navigate(`/admin/admins/edit/${admin.id}`)}
                      />
                    </td>
                  </tr>
                ))
              ) : (
                <tr>
                  <td colSpan="7">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.</td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default AdminViewPage;
